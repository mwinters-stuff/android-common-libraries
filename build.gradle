
ext {
    gradlePlugin = 'com.android.tools.build:gradle:3.2.1'
    compileSdkVersion = 27
    buildToolsVersion = "27.0.3"
    targetSdkVersion = 27
    minSdkVersion = 21
    supportVersion = "27.1.1"
    version = getTheVersion()
    buildNumber = getTheBuildNumber()

    bintrayRepo = 'maven'
    publishedGroupId = 'nz.org.winters'
    siteUrl = 'https://github.com/wintersandroid/android-common-libraries'
    gitUrl = 'https://github.com/wintersandroid/android-common-libraries.git'

    libraryVersion = getTheVersion()

    developerId = 'wintersandroid'
    developerName = 'Mathew Winters'
    developerEmail = 'android@winters.org.nz'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

}

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.1.2"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

def static getBuildMajor(){
  return 2
}

def getTheVersion() {
  def buildMajor = getBuildMajor();
  def buildNumber = getTheBuildNumber();
  if( buildNumber == 0)
  {
    return "${buildMajor}.${buildNumber}-SNAPSHOT";

  }else{
    return "${buildMajor}.${buildNumber}";
  }

}

def getTheBuildNumber(){
  return hasProperty('BUILD_NUMBER') ? BUILD_NUMBER.toInteger() : 0;
}

def getBintrayUser(){
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getBintrayApiKey(){
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}